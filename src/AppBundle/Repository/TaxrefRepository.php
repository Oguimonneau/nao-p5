<?php

namespace AppBundle\Repository;

/**
 * TaxrefRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TaxrefRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Find Espece with paging system when needed
     *
     * @param int $page The page number
     * @param int $nbPerPage The number of results returned on page
     *
     * Return array of Taxref objects
     */
    public function findTaxrefs(int $page, int $nbPerPage, $chain)
    {
        $qb = $this->createQueryBuilder('t');
        if ($chain != ""){
            $qb->where($qb->expr()->like('t.nomVern', $qb->expr()->literal('%' . $chain . '%')));
        }
        $qb->orderBy('t.nomVern')
//            // Set default paging observation start
            ->setFirstResult(($page - 1) * $nbPerPage)
//            // Set number of espece per page
            ->setMaxResults($nbPerPage)
        ;
        return $qb
            ->getQuery()
            ->getArrayResult()
        ;
        // Paginator replaces QueryBuilder method getResults(), with pagination setup
        return new \Doctrine\ORM\Tools\Pagination\Paginator($qb, true);
    }
    public function countTaxrefs($chain)
    {
        $qb = $this->createQueryBuilder('t');
        $qb->select('count(t.id)');
        if ($chain != ""){
            $qb->where($qb->expr()->like('t.nomVern', $qb->expr()->literal('%' . $chain . '%')));
        }
        return $qb
            ->getQuery()
            ->getSingleScalarResult()
        ;
    }
}
